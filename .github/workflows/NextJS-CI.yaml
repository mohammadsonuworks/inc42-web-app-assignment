name: NextJS Component CI

on:
  push:
    branches:
      - main
    paths:
      - 'nextjs_component/**'
      - '.github/workflows/NextJS-CI.yaml'

env:
  NODE_VERSION: 20
  NEXTJS_COMPONENT_PATH: nextjs_component
  DOCKER_HUB_REPO: sonukiwi/inc42-assignment-nextjs-app-repo

jobs:
  Linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source-code
        uses: actions/checkout@v4
      - name: Install NodeJS runtime
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Lint Code
        working-directory: ${{ env.NEXTJS_COMPONENT_PATH }}
        run: |
          npm run lint
      - name: Upload source-code
        uses: actions/upload-artifact@v4
        with:
          name: source-code
          path: .
  Format_Code:
    needs: Linter
    runs-on: ubuntu-latest
    steps:
      - name: Download source-code
        uses: actions/download-artifact@v4
        with:
          name: source-code
      - name: Format source-code
        working-directory: ${{ env.NEXTJS_COMPONENT_PATH }}
        run: |
          npm run format
      - name: Upload source-code
        uses: actions/upload-artifact@v4
        with:
          name: source-code
          path: .
  BuildAndPush:
    needs: Format_Code
    runs-on: ubuntu-latest
    steps:
      - name: Download source-code
        uses: actions/download-artifact@v4
        with:
          name: source-code
      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log In to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Get Short Git Commit Hash
        id: git_commit_hash
        run: |
          echo "::set-output name=short_hash::$(git rev-parse --short HEAD)"
      - name: Build Docker Image
        working-directory: ${{ env.GO_COMPONENT_PATH }}
        run: |
          TAG="${{ env.DOCKER_HUB_REPO }}:${{ steps.git_commit_hash.outputs.short_hash }}"
          docker build -t $TAG .
      - name: Push Docker Image
        run: |
          TAG="${{ env.DOCKER_HUB_REPO }}:${{ steps.git_commit_hash.outputs.short_hash }}"
          docker push $TAG





